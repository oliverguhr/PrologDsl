/*
* generated by Xtext
*/
package de.htwdd.sf.beleg.s74838.ui.labeling

import com.google.inject.Inject

import de.htwdd.sf.beleg.s74838.prolog.PrologDsl
import de.htwdd.sf.beleg.s74838.prolog.Atom;
import de.htwdd.sf.beleg.s74838.prolog.Clause;
import de.htwdd.sf.beleg.s74838.prolog.Exquery;
import de.htwdd.sf.beleg.s74838.prolog.Fact;
import de.htwdd.sf.beleg.s74838.prolog.Folge;
import de.htwdd.sf.beleg.s74838.prolog.List;
import de.htwdd.sf.beleg.s74838.prolog.NotEmptyList;
import de.htwdd.sf.beleg.s74838.prolog.Predicate;
import de.htwdd.sf.beleg.s74838.prolog.Program;
import de.htwdd.sf.beleg.s74838.prolog.Query;
import de.htwdd.sf.beleg.s74838.prolog.Rule;
import de.htwdd.sf.beleg.s74838.prolog.Term;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class PrologLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	def text(PrologDsl dsl) { return "Prolog"; }	 
    def text(Program ele) { return "Program"; }
    def text(Exquery ele) { return "Execute Query"; }
    def text(Query ele) { return "Query"; }
    def text(Clause ele) { return "Clause"; }
    def text(Fact ele) { return "Fact"; }
    def text(Rule ele) { return "Rule"; }
    def text(Predicate ele) { return "Predicate"; }
    def text(Term ele) { return "Term"; }
    def text(Atom ele) { return "Atom ="+ ele.atom; }
    def text(List ele) { return "List"; }
    def text(NotEmptyList ele) { return "NotEmptyList"; }
    def text(Folge ele) { return "Folge"; }

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
